// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/dashboard/v1/table.proto

package com.google.monitoring.dashboard.v1;

/**
 * <pre>
 * A table that displays time series data.
 * </pre>
 *
 * Protobuf type {@code google.monitoring.dashboard.v1.TimeSeriesTable}
 */
public final class TimeSeriesTable extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.monitoring.dashboard.v1.TimeSeriesTable)
    TimeSeriesTableOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TimeSeriesTable.newBuilder() to construct.
  private TimeSeriesTable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TimeSeriesTable() {
    dataSets_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TimeSeriesTable();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TimeSeriesTable(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              dataSets_ = new java.util.ArrayList<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet>();
              mutable_bitField0_ |= 0x00000001;
            }
            dataSets_.add(
                input.readMessage(com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        dataSets_ = java.util.Collections.unmodifiableList(dataSets_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.monitoring.dashboard.v1.TimeSeriesTable.class, com.google.monitoring.dashboard.v1.TimeSeriesTable.Builder.class);
  }

  public interface TableDataSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the timeSeriesQuery field is set.
     */
    boolean hasTimeSeriesQuery();
    /**
     * <pre>
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The timeSeriesQuery.
     */
    com.google.monitoring.dashboard.v1.TimeSeriesQuery getTimeSeriesQuery();
    /**
     * <pre>
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.monitoring.dashboard.v1.TimeSeriesQueryOrBuilder getTimeSeriesQueryOrBuilder();

    /**
     * <pre>
     * Optional. A template string for naming `TimeSeries` in the resulting data set.
     * This should be a string with interpolations of the form `${label_name}`,
     * which will resolve to the label's value i.e.
     * "${resource.labels.project_id}."
     * </pre>
     *
     * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The tableTemplate.
     */
    java.lang.String getTableTemplate();
    /**
     * <pre>
     * Optional. A template string for naming `TimeSeries` in the resulting data set.
     * This should be a string with interpolations of the form `${label_name}`,
     * which will resolve to the label's value i.e.
     * "${resource.labels.project_id}."
     * </pre>
     *
     * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for tableTemplate.
     */
    com.google.protobuf.ByteString
        getTableTemplateBytes();

    /**
     * <pre>
     * Optional. The lower bound on data point frequency for this data set, implemented by
     * specifying the minimum alignment period to use in a time series query
     * For example, if the data is published once every 10 minutes, the
     * `min_alignment_period` should be at least 10 minutes. It would not
     * make sense to fetch and align data at one minute intervals.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the minAlignmentPeriod field is set.
     */
    boolean hasMinAlignmentPeriod();
    /**
     * <pre>
     * Optional. The lower bound on data point frequency for this data set, implemented by
     * specifying the minimum alignment period to use in a time series query
     * For example, if the data is published once every 10 minutes, the
     * `min_alignment_period` should be at least 10 minutes. It would not
     * make sense to fetch and align data at one minute intervals.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The minAlignmentPeriod.
     */
    com.google.protobuf.Duration getMinAlignmentPeriod();
    /**
     * <pre>
     * Optional. The lower bound on data point frequency for this data set, implemented by
     * specifying the minimum alignment period to use in a time series query
     * For example, if the data is published once every 10 minutes, the
     * `min_alignment_period` should be at least 10 minutes. It would not
     * make sense to fetch and align data at one minute intervals.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    com.google.protobuf.DurationOrBuilder getMinAlignmentPeriodOrBuilder();

    /**
     * <pre>
     * Optional. Table display options for configuring how the table is rendered.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the tableDisplayOptions field is set.
     */
    boolean hasTableDisplayOptions();
    /**
     * <pre>
     * Optional. Table display options for configuring how the table is rendered.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The tableDisplayOptions.
     */
    com.google.monitoring.dashboard.v1.TableDisplayOptions getTableDisplayOptions();
    /**
     * <pre>
     * Optional. Table display options for configuring how the table is rendered.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    com.google.monitoring.dashboard.v1.TableDisplayOptionsOrBuilder getTableDisplayOptionsOrBuilder();
  }
  /**
   * <pre>
   * Groups a time series query definition with table options.
   * </pre>
   *
   * Protobuf type {@code google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet}
   */
  public static final class TableDataSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)
      TableDataSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TableDataSet.newBuilder() to construct.
    private TableDataSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableDataSet() {
      tableTemplate_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TableDataSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TableDataSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.monitoring.dashboard.v1.TimeSeriesQuery.Builder subBuilder = null;
              if (timeSeriesQuery_ != null) {
                subBuilder = timeSeriesQuery_.toBuilder();
              }
              timeSeriesQuery_ = input.readMessage(com.google.monitoring.dashboard.v1.TimeSeriesQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSeriesQuery_);
                timeSeriesQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              tableTemplate_ = s;
              break;
            }
            case 26: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (minAlignmentPeriod_ != null) {
                subBuilder = minAlignmentPeriod_.toBuilder();
              }
              minAlignmentPeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minAlignmentPeriod_);
                minAlignmentPeriod_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.monitoring.dashboard.v1.TableDisplayOptions.Builder subBuilder = null;
              if (tableDisplayOptions_ != null) {
                subBuilder = tableDisplayOptions_.toBuilder();
              }
              tableDisplayOptions_ = input.readMessage(com.google.monitoring.dashboard.v1.TableDisplayOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tableDisplayOptions_);
                tableDisplayOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_TableDataSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_TableDataSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.class, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder.class);
    }

    public static final int TIME_SERIES_QUERY_FIELD_NUMBER = 1;
    private com.google.monitoring.dashboard.v1.TimeSeriesQuery timeSeriesQuery_;
    /**
     * <pre>
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the timeSeriesQuery field is set.
     */
    @java.lang.Override
    public boolean hasTimeSeriesQuery() {
      return timeSeriesQuery_ != null;
    }
    /**
     * <pre>
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The timeSeriesQuery.
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TimeSeriesQuery getTimeSeriesQuery() {
      return timeSeriesQuery_ == null ? com.google.monitoring.dashboard.v1.TimeSeriesQuery.getDefaultInstance() : timeSeriesQuery_;
    }
    /**
     * <pre>
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TimeSeriesQueryOrBuilder getTimeSeriesQueryOrBuilder() {
      return getTimeSeriesQuery();
    }

    public static final int TABLE_TEMPLATE_FIELD_NUMBER = 2;
    private volatile java.lang.Object tableTemplate_;
    /**
     * <pre>
     * Optional. A template string for naming `TimeSeries` in the resulting data set.
     * This should be a string with interpolations of the form `${label_name}`,
     * which will resolve to the label's value i.e.
     * "${resource.labels.project_id}."
     * </pre>
     *
     * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The tableTemplate.
     */
    @java.lang.Override
    public java.lang.String getTableTemplate() {
      java.lang.Object ref = tableTemplate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tableTemplate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. A template string for naming `TimeSeries` in the resulting data set.
     * This should be a string with interpolations of the form `${label_name}`,
     * which will resolve to the label's value i.e.
     * "${resource.labels.project_id}."
     * </pre>
     *
     * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for tableTemplate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTableTemplateBytes() {
      java.lang.Object ref = tableTemplate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableTemplate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MIN_ALIGNMENT_PERIOD_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration minAlignmentPeriod_;
    /**
     * <pre>
     * Optional. The lower bound on data point frequency for this data set, implemented by
     * specifying the minimum alignment period to use in a time series query
     * For example, if the data is published once every 10 minutes, the
     * `min_alignment_period` should be at least 10 minutes. It would not
     * make sense to fetch and align data at one minute intervals.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the minAlignmentPeriod field is set.
     */
    @java.lang.Override
    public boolean hasMinAlignmentPeriod() {
      return minAlignmentPeriod_ != null;
    }
    /**
     * <pre>
     * Optional. The lower bound on data point frequency for this data set, implemented by
     * specifying the minimum alignment period to use in a time series query
     * For example, if the data is published once every 10 minutes, the
     * `min_alignment_period` should be at least 10 minutes. It would not
     * make sense to fetch and align data at one minute intervals.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The minAlignmentPeriod.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getMinAlignmentPeriod() {
      return minAlignmentPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minAlignmentPeriod_;
    }
    /**
     * <pre>
     * Optional. The lower bound on data point frequency for this data set, implemented by
     * specifying the minimum alignment period to use in a time series query
     * For example, if the data is published once every 10 minutes, the
     * `min_alignment_period` should be at least 10 minutes. It would not
     * make sense to fetch and align data at one minute intervals.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getMinAlignmentPeriodOrBuilder() {
      return getMinAlignmentPeriod();
    }

    public static final int TABLE_DISPLAY_OPTIONS_FIELD_NUMBER = 4;
    private com.google.monitoring.dashboard.v1.TableDisplayOptions tableDisplayOptions_;
    /**
     * <pre>
     * Optional. Table display options for configuring how the table is rendered.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the tableDisplayOptions field is set.
     */
    @java.lang.Override
    public boolean hasTableDisplayOptions() {
      return tableDisplayOptions_ != null;
    }
    /**
     * <pre>
     * Optional. Table display options for configuring how the table is rendered.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The tableDisplayOptions.
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TableDisplayOptions getTableDisplayOptions() {
      return tableDisplayOptions_ == null ? com.google.monitoring.dashboard.v1.TableDisplayOptions.getDefaultInstance() : tableDisplayOptions_;
    }
    /**
     * <pre>
     * Optional. Table display options for configuring how the table is rendered.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TableDisplayOptionsOrBuilder getTableDisplayOptionsOrBuilder() {
      return getTableDisplayOptions();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSeriesQuery_ != null) {
        output.writeMessage(1, getTimeSeriesQuery());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableTemplate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tableTemplate_);
      }
      if (minAlignmentPeriod_ != null) {
        output.writeMessage(3, getMinAlignmentPeriod());
      }
      if (tableDisplayOptions_ != null) {
        output.writeMessage(4, getTableDisplayOptions());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSeriesQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeSeriesQuery());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableTemplate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tableTemplate_);
      }
      if (minAlignmentPeriod_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMinAlignmentPeriod());
      }
      if (tableDisplayOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTableDisplayOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)) {
        return super.equals(obj);
      }
      com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet other = (com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet) obj;

      if (hasTimeSeriesQuery() != other.hasTimeSeriesQuery()) return false;
      if (hasTimeSeriesQuery()) {
        if (!getTimeSeriesQuery()
            .equals(other.getTimeSeriesQuery())) return false;
      }
      if (!getTableTemplate()
          .equals(other.getTableTemplate())) return false;
      if (hasMinAlignmentPeriod() != other.hasMinAlignmentPeriod()) return false;
      if (hasMinAlignmentPeriod()) {
        if (!getMinAlignmentPeriod()
            .equals(other.getMinAlignmentPeriod())) return false;
      }
      if (hasTableDisplayOptions() != other.hasTableDisplayOptions()) return false;
      if (hasTableDisplayOptions()) {
        if (!getTableDisplayOptions()
            .equals(other.getTableDisplayOptions())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeSeriesQuery()) {
        hash = (37 * hash) + TIME_SERIES_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSeriesQuery().hashCode();
      }
      hash = (37 * hash) + TABLE_TEMPLATE_FIELD_NUMBER;
      hash = (53 * hash) + getTableTemplate().hashCode();
      if (hasMinAlignmentPeriod()) {
        hash = (37 * hash) + MIN_ALIGNMENT_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getMinAlignmentPeriod().hashCode();
      }
      if (hasTableDisplayOptions()) {
        hash = (37 * hash) + TABLE_DISPLAY_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getTableDisplayOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Groups a time series query definition with table options.
     * </pre>
     *
     * Protobuf type {@code google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_TableDataSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_TableDataSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.class, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder.class);
      }

      // Construct using com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timeSeriesQueryBuilder_ == null) {
          timeSeriesQuery_ = null;
        } else {
          timeSeriesQuery_ = null;
          timeSeriesQueryBuilder_ = null;
        }
        tableTemplate_ = "";

        if (minAlignmentPeriodBuilder_ == null) {
          minAlignmentPeriod_ = null;
        } else {
          minAlignmentPeriod_ = null;
          minAlignmentPeriodBuilder_ = null;
        }
        if (tableDisplayOptionsBuilder_ == null) {
          tableDisplayOptions_ = null;
        } else {
          tableDisplayOptions_ = null;
          tableDisplayOptionsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_TableDataSet_descriptor;
      }

      @java.lang.Override
      public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet getDefaultInstanceForType() {
        return com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet build() {
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet buildPartial() {
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet result = new com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet(this);
        if (timeSeriesQueryBuilder_ == null) {
          result.timeSeriesQuery_ = timeSeriesQuery_;
        } else {
          result.timeSeriesQuery_ = timeSeriesQueryBuilder_.build();
        }
        result.tableTemplate_ = tableTemplate_;
        if (minAlignmentPeriodBuilder_ == null) {
          result.minAlignmentPeriod_ = minAlignmentPeriod_;
        } else {
          result.minAlignmentPeriod_ = minAlignmentPeriodBuilder_.build();
        }
        if (tableDisplayOptionsBuilder_ == null) {
          result.tableDisplayOptions_ = tableDisplayOptions_;
        } else {
          result.tableDisplayOptions_ = tableDisplayOptionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet) {
          return mergeFrom((com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet other) {
        if (other == com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.getDefaultInstance()) return this;
        if (other.hasTimeSeriesQuery()) {
          mergeTimeSeriesQuery(other.getTimeSeriesQuery());
        }
        if (!other.getTableTemplate().isEmpty()) {
          tableTemplate_ = other.tableTemplate_;
          onChanged();
        }
        if (other.hasMinAlignmentPeriod()) {
          mergeMinAlignmentPeriod(other.getMinAlignmentPeriod());
        }
        if (other.hasTableDisplayOptions()) {
          mergeTableDisplayOptions(other.getTableDisplayOptions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.monitoring.dashboard.v1.TimeSeriesQuery timeSeriesQuery_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.monitoring.dashboard.v1.TimeSeriesQuery, com.google.monitoring.dashboard.v1.TimeSeriesQuery.Builder, com.google.monitoring.dashboard.v1.TimeSeriesQueryOrBuilder> timeSeriesQueryBuilder_;
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the timeSeriesQuery field is set.
       */
      public boolean hasTimeSeriesQuery() {
        return timeSeriesQueryBuilder_ != null || timeSeriesQuery_ != null;
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The timeSeriesQuery.
       */
      public com.google.monitoring.dashboard.v1.TimeSeriesQuery getTimeSeriesQuery() {
        if (timeSeriesQueryBuilder_ == null) {
          return timeSeriesQuery_ == null ? com.google.monitoring.dashboard.v1.TimeSeriesQuery.getDefaultInstance() : timeSeriesQuery_;
        } else {
          return timeSeriesQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setTimeSeriesQuery(com.google.monitoring.dashboard.v1.TimeSeriesQuery value) {
        if (timeSeriesQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSeriesQuery_ = value;
          onChanged();
        } else {
          timeSeriesQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setTimeSeriesQuery(
          com.google.monitoring.dashboard.v1.TimeSeriesQuery.Builder builderForValue) {
        if (timeSeriesQueryBuilder_ == null) {
          timeSeriesQuery_ = builderForValue.build();
          onChanged();
        } else {
          timeSeriesQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergeTimeSeriesQuery(com.google.monitoring.dashboard.v1.TimeSeriesQuery value) {
        if (timeSeriesQueryBuilder_ == null) {
          if (timeSeriesQuery_ != null) {
            timeSeriesQuery_ =
              com.google.monitoring.dashboard.v1.TimeSeriesQuery.newBuilder(timeSeriesQuery_).mergeFrom(value).buildPartial();
          } else {
            timeSeriesQuery_ = value;
          }
          onChanged();
        } else {
          timeSeriesQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearTimeSeriesQuery() {
        if (timeSeriesQueryBuilder_ == null) {
          timeSeriesQuery_ = null;
          onChanged();
        } else {
          timeSeriesQuery_ = null;
          timeSeriesQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.monitoring.dashboard.v1.TimeSeriesQuery.Builder getTimeSeriesQueryBuilder() {
        
        onChanged();
        return getTimeSeriesQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.monitoring.dashboard.v1.TimeSeriesQueryOrBuilder getTimeSeriesQueryOrBuilder() {
        if (timeSeriesQueryBuilder_ != null) {
          return timeSeriesQueryBuilder_.getMessageOrBuilder();
        } else {
          return timeSeriesQuery_ == null ?
              com.google.monitoring.dashboard.v1.TimeSeriesQuery.getDefaultInstance() : timeSeriesQuery_;
        }
      }
      /**
       * <pre>
       * Required. Fields for querying time series data from the
       * Stackdriver metrics API.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.monitoring.dashboard.v1.TimeSeriesQuery, com.google.monitoring.dashboard.v1.TimeSeriesQuery.Builder, com.google.monitoring.dashboard.v1.TimeSeriesQueryOrBuilder> 
          getTimeSeriesQueryFieldBuilder() {
        if (timeSeriesQueryBuilder_ == null) {
          timeSeriesQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.monitoring.dashboard.v1.TimeSeriesQuery, com.google.monitoring.dashboard.v1.TimeSeriesQuery.Builder, com.google.monitoring.dashboard.v1.TimeSeriesQueryOrBuilder>(
                  getTimeSeriesQuery(),
                  getParentForChildren(),
                  isClean());
          timeSeriesQuery_ = null;
        }
        return timeSeriesQueryBuilder_;
      }

      private java.lang.Object tableTemplate_ = "";
      /**
       * <pre>
       * Optional. A template string for naming `TimeSeries` in the resulting data set.
       * This should be a string with interpolations of the form `${label_name}`,
       * which will resolve to the label's value i.e.
       * "${resource.labels.project_id}."
       * </pre>
       *
       * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The tableTemplate.
       */
      public java.lang.String getTableTemplate() {
        java.lang.Object ref = tableTemplate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tableTemplate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. A template string for naming `TimeSeries` in the resulting data set.
       * This should be a string with interpolations of the form `${label_name}`,
       * which will resolve to the label's value i.e.
       * "${resource.labels.project_id}."
       * </pre>
       *
       * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for tableTemplate.
       */
      public com.google.protobuf.ByteString
          getTableTemplateBytes() {
        java.lang.Object ref = tableTemplate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableTemplate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. A template string for naming `TimeSeries` in the resulting data set.
       * This should be a string with interpolations of the form `${label_name}`,
       * which will resolve to the label's value i.e.
       * "${resource.labels.project_id}."
       * </pre>
       *
       * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The tableTemplate to set.
       * @return This builder for chaining.
       */
      public Builder setTableTemplate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tableTemplate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. A template string for naming `TimeSeries` in the resulting data set.
       * This should be a string with interpolations of the form `${label_name}`,
       * which will resolve to the label's value i.e.
       * "${resource.labels.project_id}."
       * </pre>
       *
       * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearTableTemplate() {
        
        tableTemplate_ = getDefaultInstance().getTableTemplate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. A template string for naming `TimeSeries` in the resulting data set.
       * This should be a string with interpolations of the form `${label_name}`,
       * which will resolve to the label's value i.e.
       * "${resource.labels.project_id}."
       * </pre>
       *
       * <code>string table_template = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for tableTemplate to set.
       * @return This builder for chaining.
       */
      public Builder setTableTemplateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tableTemplate_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration minAlignmentPeriod_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> minAlignmentPeriodBuilder_;
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return Whether the minAlignmentPeriod field is set.
       */
      public boolean hasMinAlignmentPeriod() {
        return minAlignmentPeriodBuilder_ != null || minAlignmentPeriod_ != null;
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The minAlignmentPeriod.
       */
      public com.google.protobuf.Duration getMinAlignmentPeriod() {
        if (minAlignmentPeriodBuilder_ == null) {
          return minAlignmentPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minAlignmentPeriod_;
        } else {
          return minAlignmentPeriodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder setMinAlignmentPeriod(com.google.protobuf.Duration value) {
        if (minAlignmentPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minAlignmentPeriod_ = value;
          onChanged();
        } else {
          minAlignmentPeriodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder setMinAlignmentPeriod(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (minAlignmentPeriodBuilder_ == null) {
          minAlignmentPeriod_ = builderForValue.build();
          onChanged();
        } else {
          minAlignmentPeriodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder mergeMinAlignmentPeriod(com.google.protobuf.Duration value) {
        if (minAlignmentPeriodBuilder_ == null) {
          if (minAlignmentPeriod_ != null) {
            minAlignmentPeriod_ =
              com.google.protobuf.Duration.newBuilder(minAlignmentPeriod_).mergeFrom(value).buildPartial();
          } else {
            minAlignmentPeriod_ = value;
          }
          onChanged();
        } else {
          minAlignmentPeriodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder clearMinAlignmentPeriod() {
        if (minAlignmentPeriodBuilder_ == null) {
          minAlignmentPeriod_ = null;
          onChanged();
        } else {
          minAlignmentPeriod_ = null;
          minAlignmentPeriodBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public com.google.protobuf.Duration.Builder getMinAlignmentPeriodBuilder() {
        
        onChanged();
        return getMinAlignmentPeriodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public com.google.protobuf.DurationOrBuilder getMinAlignmentPeriodOrBuilder() {
        if (minAlignmentPeriodBuilder_ != null) {
          return minAlignmentPeriodBuilder_.getMessageOrBuilder();
        } else {
          return minAlignmentPeriod_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : minAlignmentPeriod_;
        }
      }
      /**
       * <pre>
       * Optional. The lower bound on data point frequency for this data set, implemented by
       * specifying the minimum alignment period to use in a time series query
       * For example, if the data is published once every 10 minutes, the
       * `min_alignment_period` should be at least 10 minutes. It would not
       * make sense to fetch and align data at one minute intervals.
       * </pre>
       *
       * <code>.google.protobuf.Duration min_alignment_period = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getMinAlignmentPeriodFieldBuilder() {
        if (minAlignmentPeriodBuilder_ == null) {
          minAlignmentPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getMinAlignmentPeriod(),
                  getParentForChildren(),
                  isClean());
          minAlignmentPeriod_ = null;
        }
        return minAlignmentPeriodBuilder_;
      }

      private com.google.monitoring.dashboard.v1.TableDisplayOptions tableDisplayOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.monitoring.dashboard.v1.TableDisplayOptions, com.google.monitoring.dashboard.v1.TableDisplayOptions.Builder, com.google.monitoring.dashboard.v1.TableDisplayOptionsOrBuilder> tableDisplayOptionsBuilder_;
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return Whether the tableDisplayOptions field is set.
       */
      public boolean hasTableDisplayOptions() {
        return tableDisplayOptionsBuilder_ != null || tableDisplayOptions_ != null;
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The tableDisplayOptions.
       */
      public com.google.monitoring.dashboard.v1.TableDisplayOptions getTableDisplayOptions() {
        if (tableDisplayOptionsBuilder_ == null) {
          return tableDisplayOptions_ == null ? com.google.monitoring.dashboard.v1.TableDisplayOptions.getDefaultInstance() : tableDisplayOptions_;
        } else {
          return tableDisplayOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder setTableDisplayOptions(com.google.monitoring.dashboard.v1.TableDisplayOptions value) {
        if (tableDisplayOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableDisplayOptions_ = value;
          onChanged();
        } else {
          tableDisplayOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder setTableDisplayOptions(
          com.google.monitoring.dashboard.v1.TableDisplayOptions.Builder builderForValue) {
        if (tableDisplayOptionsBuilder_ == null) {
          tableDisplayOptions_ = builderForValue.build();
          onChanged();
        } else {
          tableDisplayOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder mergeTableDisplayOptions(com.google.monitoring.dashboard.v1.TableDisplayOptions value) {
        if (tableDisplayOptionsBuilder_ == null) {
          if (tableDisplayOptions_ != null) {
            tableDisplayOptions_ =
              com.google.monitoring.dashboard.v1.TableDisplayOptions.newBuilder(tableDisplayOptions_).mergeFrom(value).buildPartial();
          } else {
            tableDisplayOptions_ = value;
          }
          onChanged();
        } else {
          tableDisplayOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder clearTableDisplayOptions() {
        if (tableDisplayOptionsBuilder_ == null) {
          tableDisplayOptions_ = null;
          onChanged();
        } else {
          tableDisplayOptions_ = null;
          tableDisplayOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public com.google.monitoring.dashboard.v1.TableDisplayOptions.Builder getTableDisplayOptionsBuilder() {
        
        onChanged();
        return getTableDisplayOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public com.google.monitoring.dashboard.v1.TableDisplayOptionsOrBuilder getTableDisplayOptionsOrBuilder() {
        if (tableDisplayOptionsBuilder_ != null) {
          return tableDisplayOptionsBuilder_.getMessageOrBuilder();
        } else {
          return tableDisplayOptions_ == null ?
              com.google.monitoring.dashboard.v1.TableDisplayOptions.getDefaultInstance() : tableDisplayOptions_;
        }
      }
      /**
       * <pre>
       * Optional. Table display options for configuring how the table is rendered.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.monitoring.dashboard.v1.TableDisplayOptions, com.google.monitoring.dashboard.v1.TableDisplayOptions.Builder, com.google.monitoring.dashboard.v1.TableDisplayOptionsOrBuilder> 
          getTableDisplayOptionsFieldBuilder() {
        if (tableDisplayOptionsBuilder_ == null) {
          tableDisplayOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.monitoring.dashboard.v1.TableDisplayOptions, com.google.monitoring.dashboard.v1.TableDisplayOptions.Builder, com.google.monitoring.dashboard.v1.TableDisplayOptionsOrBuilder>(
                  getTableDisplayOptions(),
                  getParentForChildren(),
                  isClean());
          tableDisplayOptions_ = null;
        }
        return tableDisplayOptionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)
    }

    // @@protoc_insertion_point(class_scope:google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet)
    private static final com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet();
    }

    public static com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TableDataSet>
        PARSER = new com.google.protobuf.AbstractParser<TableDataSet>() {
      @java.lang.Override
      public TableDataSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableDataSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableDataSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TableDataSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int DATA_SETS_FIELD_NUMBER = 1;
  private java.util.List<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet> dataSets_;
  /**
   * <pre>
   * Required. The data displayed in this table.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet> getDataSetsList() {
    return dataSets_;
  }
  /**
   * <pre>
   * Required. The data displayed in this table.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder> 
      getDataSetsOrBuilderList() {
    return dataSets_;
  }
  /**
   * <pre>
   * Required. The data displayed in this table.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public int getDataSetsCount() {
    return dataSets_.size();
  }
  /**
   * <pre>
   * Required. The data displayed in this table.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet getDataSets(int index) {
    return dataSets_.get(index);
  }
  /**
   * <pre>
   * Required. The data displayed in this table.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder getDataSetsOrBuilder(
      int index) {
    return dataSets_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < dataSets_.size(); i++) {
      output.writeMessage(1, dataSets_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < dataSets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, dataSets_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.monitoring.dashboard.v1.TimeSeriesTable)) {
      return super.equals(obj);
    }
    com.google.monitoring.dashboard.v1.TimeSeriesTable other = (com.google.monitoring.dashboard.v1.TimeSeriesTable) obj;

    if (!getDataSetsList()
        .equals(other.getDataSetsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDataSetsCount() > 0) {
      hash = (37 * hash) + DATA_SETS_FIELD_NUMBER;
      hash = (53 * hash) + getDataSetsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.monitoring.dashboard.v1.TimeSeriesTable parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.monitoring.dashboard.v1.TimeSeriesTable prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A table that displays time series data.
   * </pre>
   *
   * Protobuf type {@code google.monitoring.dashboard.v1.TimeSeriesTable}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.monitoring.dashboard.v1.TimeSeriesTable)
      com.google.monitoring.dashboard.v1.TimeSeriesTableOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.monitoring.dashboard.v1.TimeSeriesTable.class, com.google.monitoring.dashboard.v1.TimeSeriesTable.Builder.class);
    }

    // Construct using com.google.monitoring.dashboard.v1.TimeSeriesTable.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDataSetsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dataSetsBuilder_ == null) {
        dataSets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        dataSetsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.monitoring.dashboard.v1.TableProto.internal_static_google_monitoring_dashboard_v1_TimeSeriesTable_descriptor;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TimeSeriesTable getDefaultInstanceForType() {
      return com.google.monitoring.dashboard.v1.TimeSeriesTable.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TimeSeriesTable build() {
      com.google.monitoring.dashboard.v1.TimeSeriesTable result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.TimeSeriesTable buildPartial() {
      com.google.monitoring.dashboard.v1.TimeSeriesTable result = new com.google.monitoring.dashboard.v1.TimeSeriesTable(this);
      int from_bitField0_ = bitField0_;
      if (dataSetsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dataSets_ = java.util.Collections.unmodifiableList(dataSets_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dataSets_ = dataSets_;
      } else {
        result.dataSets_ = dataSetsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.monitoring.dashboard.v1.TimeSeriesTable) {
        return mergeFrom((com.google.monitoring.dashboard.v1.TimeSeriesTable)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.monitoring.dashboard.v1.TimeSeriesTable other) {
      if (other == com.google.monitoring.dashboard.v1.TimeSeriesTable.getDefaultInstance()) return this;
      if (dataSetsBuilder_ == null) {
        if (!other.dataSets_.isEmpty()) {
          if (dataSets_.isEmpty()) {
            dataSets_ = other.dataSets_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDataSetsIsMutable();
            dataSets_.addAll(other.dataSets_);
          }
          onChanged();
        }
      } else {
        if (!other.dataSets_.isEmpty()) {
          if (dataSetsBuilder_.isEmpty()) {
            dataSetsBuilder_.dispose();
            dataSetsBuilder_ = null;
            dataSets_ = other.dataSets_;
            bitField0_ = (bitField0_ & ~0x00000001);
            dataSetsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDataSetsFieldBuilder() : null;
          } else {
            dataSetsBuilder_.addAllMessages(other.dataSets_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.monitoring.dashboard.v1.TimeSeriesTable parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.monitoring.dashboard.v1.TimeSeriesTable) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet> dataSets_ =
      java.util.Collections.emptyList();
    private void ensureDataSetsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dataSets_ = new java.util.ArrayList<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet>(dataSets_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder> dataSetsBuilder_;

    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet> getDataSetsList() {
      if (dataSetsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dataSets_);
      } else {
        return dataSetsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public int getDataSetsCount() {
      if (dataSetsBuilder_ == null) {
        return dataSets_.size();
      } else {
        return dataSetsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet getDataSets(int index) {
      if (dataSetsBuilder_ == null) {
        return dataSets_.get(index);
      } else {
        return dataSetsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setDataSets(
        int index, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet value) {
      if (dataSetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataSetsIsMutable();
        dataSets_.set(index, value);
        onChanged();
      } else {
        dataSetsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setDataSets(
        int index, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder builderForValue) {
      if (dataSetsBuilder_ == null) {
        ensureDataSetsIsMutable();
        dataSets_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataSetsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addDataSets(com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet value) {
      if (dataSetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataSetsIsMutable();
        dataSets_.add(value);
        onChanged();
      } else {
        dataSetsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addDataSets(
        int index, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet value) {
      if (dataSetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataSetsIsMutable();
        dataSets_.add(index, value);
        onChanged();
      } else {
        dataSetsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addDataSets(
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder builderForValue) {
      if (dataSetsBuilder_ == null) {
        ensureDataSetsIsMutable();
        dataSets_.add(builderForValue.build());
        onChanged();
      } else {
        dataSetsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addDataSets(
        int index, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder builderForValue) {
      if (dataSetsBuilder_ == null) {
        ensureDataSetsIsMutable();
        dataSets_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataSetsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addAllDataSets(
        java.lang.Iterable<? extends com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet> values) {
      if (dataSetsBuilder_ == null) {
        ensureDataSetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataSets_);
        onChanged();
      } else {
        dataSetsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearDataSets() {
      if (dataSetsBuilder_ == null) {
        dataSets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        dataSetsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder removeDataSets(int index) {
      if (dataSetsBuilder_ == null) {
        ensureDataSetsIsMutable();
        dataSets_.remove(index);
        onChanged();
      } else {
        dataSetsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder getDataSetsBuilder(
        int index) {
      return getDataSetsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder getDataSetsOrBuilder(
        int index) {
      if (dataSetsBuilder_ == null) {
        return dataSets_.get(index);  } else {
        return dataSetsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<? extends com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder> 
         getDataSetsOrBuilderList() {
      if (dataSetsBuilder_ != null) {
        return dataSetsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dataSets_);
      }
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder addDataSetsBuilder() {
      return getDataSetsFieldBuilder().addBuilder(
          com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder addDataSetsBuilder(
        int index) {
      return getDataSetsFieldBuilder().addBuilder(
          index, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. The data displayed in this table.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder> 
         getDataSetsBuilderList() {
      return getDataSetsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder> 
        getDataSetsFieldBuilder() {
      if (dataSetsBuilder_ == null) {
        dataSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.Builder, com.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetOrBuilder>(
                dataSets_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        dataSets_ = null;
      }
      return dataSetsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.monitoring.dashboard.v1.TimeSeriesTable)
  }

  // @@protoc_insertion_point(class_scope:google.monitoring.dashboard.v1.TimeSeriesTable)
  private static final com.google.monitoring.dashboard.v1.TimeSeriesTable DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.monitoring.dashboard.v1.TimeSeriesTable();
  }

  public static com.google.monitoring.dashboard.v1.TimeSeriesTable getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TimeSeriesTable>
      PARSER = new com.google.protobuf.AbstractParser<TimeSeriesTable>() {
    @java.lang.Override
    public TimeSeriesTable parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TimeSeriesTable(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TimeSeriesTable> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TimeSeriesTable> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.monitoring.dashboard.v1.TimeSeriesTable getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

