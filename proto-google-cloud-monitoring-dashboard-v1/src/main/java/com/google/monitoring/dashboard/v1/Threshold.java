/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/dashboard/v1/metrics.proto

package com.google.monitoring.dashboard.v1;

/**
 *
 *
 * <pre>
 * Defines a threshold for categorizing time series values.
 * </pre>
 *
 * Protobuf type {@code google.monitoring.dashboard.v1.Threshold}
 */
public final class Threshold extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.monitoring.dashboard.v1.Threshold)
    ThresholdOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Threshold.newBuilder() to construct.
  private Threshold(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Threshold() {
    label_ = "";
    color_ = 0;
    direction_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Threshold();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private Threshold(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              label_ = s;
              break;
            }
          case 17:
            {
              value_ = input.readDouble();
              break;
            }
          case 24:
            {
              int rawValue = input.readEnum();

              color_ = rawValue;
              break;
            }
          case 32:
            {
              int rawValue = input.readEnum();

              direction_ = rawValue;
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.monitoring.dashboard.v1.MetricsProto
        .internal_static_google_monitoring_dashboard_v1_Threshold_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.monitoring.dashboard.v1.MetricsProto
        .internal_static_google_monitoring_dashboard_v1_Threshold_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.monitoring.dashboard.v1.Threshold.class,
            com.google.monitoring.dashboard.v1.Threshold.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The color suggests an interpretation to the viewer when actual values cross
   * the threshold. Comments on each color provide UX guidance on how users can
   * be expected to interpret a given state color.
   * </pre>
   *
   * Protobuf enum {@code google.monitoring.dashboard.v1.Threshold.Color}
   */
  public enum Color implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Color is unspecified. Not allowed in well-formed requests.
     * </pre>
     *
     * <code>COLOR_UNSPECIFIED = 0;</code>
     */
    COLOR_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Crossing the threshold is "concerning" behavior.
     * </pre>
     *
     * <code>YELLOW = 4;</code>
     */
    YELLOW(4),
    /**
     *
     *
     * <pre>
     * Crossing the threshold is "emergency" behavior.
     * </pre>
     *
     * <code>RED = 6;</code>
     */
    RED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Color is unspecified. Not allowed in well-formed requests.
     * </pre>
     *
     * <code>COLOR_UNSPECIFIED = 0;</code>
     */
    public static final int COLOR_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Crossing the threshold is "concerning" behavior.
     * </pre>
     *
     * <code>YELLOW = 4;</code>
     */
    public static final int YELLOW_VALUE = 4;
    /**
     *
     *
     * <pre>
     * Crossing the threshold is "emergency" behavior.
     * </pre>
     *
     * <code>RED = 6;</code>
     */
    public static final int RED_VALUE = 6;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Color valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Color forNumber(int value) {
      switch (value) {
        case 0:
          return COLOR_UNSPECIFIED;
        case 4:
          return YELLOW;
        case 6:
          return RED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Color> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Color> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Color>() {
          public Color findValueByNumber(int number) {
            return Color.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.monitoring.dashboard.v1.Threshold.getDescriptor().getEnumTypes().get(0);
    }

    private static final Color[] VALUES = values();

    public static Color valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Color(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.monitoring.dashboard.v1.Threshold.Color)
  }

  /**
   *
   *
   * <pre>
   * Whether the threshold is considered crossed by an actual value above or
   * below its threshold value.
   * </pre>
   *
   * Protobuf enum {@code google.monitoring.dashboard.v1.Threshold.Direction}
   */
  public enum Direction implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Not allowed in well-formed requests.
     * </pre>
     *
     * <code>DIRECTION_UNSPECIFIED = 0;</code>
     */
    DIRECTION_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The threshold will be considered crossed if the actual value is above
     * the threshold value.
     * </pre>
     *
     * <code>ABOVE = 1;</code>
     */
    ABOVE(1),
    /**
     *
     *
     * <pre>
     * The threshold will be considered crossed if the actual value is below
     * the threshold value.
     * </pre>
     *
     * <code>BELOW = 2;</code>
     */
    BELOW(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Not allowed in well-formed requests.
     * </pre>
     *
     * <code>DIRECTION_UNSPECIFIED = 0;</code>
     */
    public static final int DIRECTION_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The threshold will be considered crossed if the actual value is above
     * the threshold value.
     * </pre>
     *
     * <code>ABOVE = 1;</code>
     */
    public static final int ABOVE_VALUE = 1;
    /**
     *
     *
     * <pre>
     * The threshold will be considered crossed if the actual value is below
     * the threshold value.
     * </pre>
     *
     * <code>BELOW = 2;</code>
     */
    public static final int BELOW_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Direction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Direction forNumber(int value) {
      switch (value) {
        case 0:
          return DIRECTION_UNSPECIFIED;
        case 1:
          return ABOVE;
        case 2:
          return BELOW;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Direction> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Direction> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Direction>() {
          public Direction findValueByNumber(int number) {
            return Direction.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.monitoring.dashboard.v1.Threshold.getDescriptor().getEnumTypes().get(1);
    }

    private static final Direction[] VALUES = values();

    public static Direction valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Direction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.monitoring.dashboard.v1.Threshold.Direction)
  }

  public static final int LABEL_FIELD_NUMBER = 1;
  private volatile java.lang.Object label_;
  /**
   *
   *
   * <pre>
   * A label for the threshold.
   * </pre>
   *
   * <code>string label = 1;</code>
   *
   * @return The label.
   */
  @java.lang.Override
  public java.lang.String getLabel() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      label_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * A label for the threshold.
   * </pre>
   *
   * <code>string label = 1;</code>
   *
   * @return The bytes for label.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLabelBytes() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      label_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VALUE_FIELD_NUMBER = 2;
  private double value_;
  /**
   *
   *
   * <pre>
   * The value of the threshold. The value should be defined in the native scale
   * of the metric.
   * </pre>
   *
   * <code>double value = 2;</code>
   *
   * @return The value.
   */
  @java.lang.Override
  public double getValue() {
    return value_;
  }

  public static final int COLOR_FIELD_NUMBER = 3;
  private int color_;
  /**
   *
   *
   * <pre>
   * The state color for this threshold. Color is not allowed in a XyChart.
   * </pre>
   *
   * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
   *
   * @return The enum numeric value on the wire for color.
   */
  @java.lang.Override
  public int getColorValue() {
    return color_;
  }
  /**
   *
   *
   * <pre>
   * The state color for this threshold. Color is not allowed in a XyChart.
   * </pre>
   *
   * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
   *
   * @return The color.
   */
  @java.lang.Override
  public com.google.monitoring.dashboard.v1.Threshold.Color getColor() {
    @SuppressWarnings("deprecation")
    com.google.monitoring.dashboard.v1.Threshold.Color result =
        com.google.monitoring.dashboard.v1.Threshold.Color.valueOf(color_);
    return result == null
        ? com.google.monitoring.dashboard.v1.Threshold.Color.UNRECOGNIZED
        : result;
  }

  public static final int DIRECTION_FIELD_NUMBER = 4;
  private int direction_;
  /**
   *
   *
   * <pre>
   * The direction for the current threshold. Direction is not allowed in a
   * XyChart.
   * </pre>
   *
   * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
   *
   * @return The enum numeric value on the wire for direction.
   */
  @java.lang.Override
  public int getDirectionValue() {
    return direction_;
  }
  /**
   *
   *
   * <pre>
   * The direction for the current threshold. Direction is not allowed in a
   * XyChart.
   * </pre>
   *
   * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
   *
   * @return The direction.
   */
  @java.lang.Override
  public com.google.monitoring.dashboard.v1.Threshold.Direction getDirection() {
    @SuppressWarnings("deprecation")
    com.google.monitoring.dashboard.v1.Threshold.Direction result =
        com.google.monitoring.dashboard.v1.Threshold.Direction.valueOf(direction_);
    return result == null
        ? com.google.monitoring.dashboard.v1.Threshold.Direction.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getLabelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
    }
    if (value_ != 0D) {
      output.writeDouble(2, value_);
    }
    if (color_
        != com.google.monitoring.dashboard.v1.Threshold.Color.COLOR_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, color_);
    }
    if (direction_
        != com.google.monitoring.dashboard.v1.Threshold.Direction.DIRECTION_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(4, direction_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getLabelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
    }
    if (value_ != 0D) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, value_);
    }
    if (color_
        != com.google.monitoring.dashboard.v1.Threshold.Color.COLOR_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, color_);
    }
    if (direction_
        != com.google.monitoring.dashboard.v1.Threshold.Direction.DIRECTION_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, direction_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.monitoring.dashboard.v1.Threshold)) {
      return super.equals(obj);
    }
    com.google.monitoring.dashboard.v1.Threshold other =
        (com.google.monitoring.dashboard.v1.Threshold) obj;

    if (!getLabel().equals(other.getLabel())) return false;
    if (java.lang.Double.doubleToLongBits(getValue())
        != java.lang.Double.doubleToLongBits(other.getValue())) return false;
    if (color_ != other.color_) return false;
    if (direction_ != other.direction_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LABEL_FIELD_NUMBER;
    hash = (53 * hash) + getLabel().hashCode();
    hash = (37 * hash) + VALUE_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getValue()));
    hash = (37 * hash) + COLOR_FIELD_NUMBER;
    hash = (53 * hash) + color_;
    hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
    hash = (53 * hash) + direction_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.monitoring.dashboard.v1.Threshold parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.monitoring.dashboard.v1.Threshold prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Defines a threshold for categorizing time series values.
   * </pre>
   *
   * Protobuf type {@code google.monitoring.dashboard.v1.Threshold}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.monitoring.dashboard.v1.Threshold)
      com.google.monitoring.dashboard.v1.ThresholdOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.monitoring.dashboard.v1.MetricsProto
          .internal_static_google_monitoring_dashboard_v1_Threshold_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.monitoring.dashboard.v1.MetricsProto
          .internal_static_google_monitoring_dashboard_v1_Threshold_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.monitoring.dashboard.v1.Threshold.class,
              com.google.monitoring.dashboard.v1.Threshold.Builder.class);
    }

    // Construct using com.google.monitoring.dashboard.v1.Threshold.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      label_ = "";

      value_ = 0D;

      color_ = 0;

      direction_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.monitoring.dashboard.v1.MetricsProto
          .internal_static_google_monitoring_dashboard_v1_Threshold_descriptor;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.Threshold getDefaultInstanceForType() {
      return com.google.monitoring.dashboard.v1.Threshold.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.Threshold build() {
      com.google.monitoring.dashboard.v1.Threshold result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.Threshold buildPartial() {
      com.google.monitoring.dashboard.v1.Threshold result =
          new com.google.monitoring.dashboard.v1.Threshold(this);
      result.label_ = label_;
      result.value_ = value_;
      result.color_ = color_;
      result.direction_ = direction_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.monitoring.dashboard.v1.Threshold) {
        return mergeFrom((com.google.monitoring.dashboard.v1.Threshold) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.monitoring.dashboard.v1.Threshold other) {
      if (other == com.google.monitoring.dashboard.v1.Threshold.getDefaultInstance()) return this;
      if (!other.getLabel().isEmpty()) {
        label_ = other.label_;
        onChanged();
      }
      if (other.getValue() != 0D) {
        setValue(other.getValue());
      }
      if (other.color_ != 0) {
        setColorValue(other.getColorValue());
      }
      if (other.direction_ != 0) {
        setDirectionValue(other.getDirectionValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.monitoring.dashboard.v1.Threshold parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.monitoring.dashboard.v1.Threshold) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object label_ = "";
    /**
     *
     *
     * <pre>
     * A label for the threshold.
     * </pre>
     *
     * <code>string label = 1;</code>
     *
     * @return The label.
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A label for the threshold.
     * </pre>
     *
     * <code>string label = 1;</code>
     *
     * @return The bytes for label.
     */
    public com.google.protobuf.ByteString getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A label for the threshold.
     * </pre>
     *
     * <code>string label = 1;</code>
     *
     * @param value The label to set.
     * @return This builder for chaining.
     */
    public Builder setLabel(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      label_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A label for the threshold.
     * </pre>
     *
     * <code>string label = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLabel() {

      label_ = getDefaultInstance().getLabel();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A label for the threshold.
     * </pre>
     *
     * <code>string label = 1;</code>
     *
     * @param value The bytes for label to set.
     * @return This builder for chaining.
     */
    public Builder setLabelBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      label_ = value;
      onChanged();
      return this;
    }

    private double value_;
    /**
     *
     *
     * <pre>
     * The value of the threshold. The value should be defined in the native scale
     * of the metric.
     * </pre>
     *
     * <code>double value = 2;</code>
     *
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }
    /**
     *
     *
     * <pre>
     * The value of the threshold. The value should be defined in the native scale
     * of the metric.
     * </pre>
     *
     * <code>double value = 2;</code>
     *
     * @param value The value to set.
     * @return This builder for chaining.
     */
    public Builder setValue(double value) {

      value_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of the threshold. The value should be defined in the native scale
     * of the metric.
     * </pre>
     *
     * <code>double value = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearValue() {

      value_ = 0D;
      onChanged();
      return this;
    }

    private int color_ = 0;
    /**
     *
     *
     * <pre>
     * The state color for this threshold. Color is not allowed in a XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
     *
     * @return The enum numeric value on the wire for color.
     */
    @java.lang.Override
    public int getColorValue() {
      return color_;
    }
    /**
     *
     *
     * <pre>
     * The state color for this threshold. Color is not allowed in a XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
     *
     * @param value The enum numeric value on the wire for color to set.
     * @return This builder for chaining.
     */
    public Builder setColorValue(int value) {

      color_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state color for this threshold. Color is not allowed in a XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
     *
     * @return The color.
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.Threshold.Color getColor() {
      @SuppressWarnings("deprecation")
      com.google.monitoring.dashboard.v1.Threshold.Color result =
          com.google.monitoring.dashboard.v1.Threshold.Color.valueOf(color_);
      return result == null
          ? com.google.monitoring.dashboard.v1.Threshold.Color.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The state color for this threshold. Color is not allowed in a XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
     *
     * @param value The color to set.
     * @return This builder for chaining.
     */
    public Builder setColor(com.google.monitoring.dashboard.v1.Threshold.Color value) {
      if (value == null) {
        throw new NullPointerException();
      }

      color_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state color for this threshold. Color is not allowed in a XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Color color = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearColor() {

      color_ = 0;
      onChanged();
      return this;
    }

    private int direction_ = 0;
    /**
     *
     *
     * <pre>
     * The direction for the current threshold. Direction is not allowed in a
     * XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
     *
     * @return The enum numeric value on the wire for direction.
     */
    @java.lang.Override
    public int getDirectionValue() {
      return direction_;
    }
    /**
     *
     *
     * <pre>
     * The direction for the current threshold. Direction is not allowed in a
     * XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
     *
     * @param value The enum numeric value on the wire for direction to set.
     * @return This builder for chaining.
     */
    public Builder setDirectionValue(int value) {

      direction_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The direction for the current threshold. Direction is not allowed in a
     * XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
     *
     * @return The direction.
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.Threshold.Direction getDirection() {
      @SuppressWarnings("deprecation")
      com.google.monitoring.dashboard.v1.Threshold.Direction result =
          com.google.monitoring.dashboard.v1.Threshold.Direction.valueOf(direction_);
      return result == null
          ? com.google.monitoring.dashboard.v1.Threshold.Direction.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The direction for the current threshold. Direction is not allowed in a
     * XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
     *
     * @param value The direction to set.
     * @return This builder for chaining.
     */
    public Builder setDirection(com.google.monitoring.dashboard.v1.Threshold.Direction value) {
      if (value == null) {
        throw new NullPointerException();
      }

      direction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The direction for the current threshold. Direction is not allowed in a
     * XyChart.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Threshold.Direction direction = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDirection() {

      direction_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.monitoring.dashboard.v1.Threshold)
  }

  // @@protoc_insertion_point(class_scope:google.monitoring.dashboard.v1.Threshold)
  private static final com.google.monitoring.dashboard.v1.Threshold DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.monitoring.dashboard.v1.Threshold();
  }

  public static com.google.monitoring.dashboard.v1.Threshold getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Threshold> PARSER =
      new com.google.protobuf.AbstractParser<Threshold>() {
        @java.lang.Override
        public Threshold parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Threshold(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<Threshold> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Threshold> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.monitoring.dashboard.v1.Threshold getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
